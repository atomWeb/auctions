service: auction-service
variablesResolutionMode: 20210326

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  region: us-east-1
  memorySize: 256
  stage: ${opt:stage, self:custom.default_stage}
  environment:
    REGION: ${self:custom.region}
    AUCTIONS_TABLE: ${self:custom.AuctionsTable.name}
    TLOCALE: es-ES
  iam:
    role:
      statements:
        - ${file(iam/AuctionsTableIAM.yml):AuctionsTableIAM}

resources:
  Resources:
    AuctionsTable: ${file(resources/AuctionsTable.yml):AuctionsTable}

functions:
  createAuction:
    handler: src/handlers/createAuction.handler
    events:
      - http:
          method: POST
          path: /auction
          authorizer: ${self:custom.authorizer}

  getAuctions:
    handler: src/handlers/getAuctions.handler
    events:
      - http:
          method: GET
          path: /auctions
          authorizer: ${self:custom.authorizer}

  getAuction:
    handler: src/handlers/getAuction.handler
    events:
      - http:
          method: GET
          path: /auction/{id}
          authorizer: ${self:custom.authorizer}

  placeBid:
    handler: src/handlers/placeBid.handler
    events:
      - http:
          method: PATCH
          path: /auction/{id}/bid
          authorizer: ${self:custom.authorizer}

  processAuctions:
    handler: src/handlers/processAuctions.handler
    # events:
    #   - schedule: rate(1 minute)

custom:  
  bundle:
    linting: false
  app_acronym: auctions
  default_stage: dev
  stage: ${opt:stage, self:custom.default_stage}
  region: ${opt:region, self:provider.region}  
  stack_name: ${self:custom.app_acronym}-${self:custom.stage}
  dynamo_auctions_table: AuctionsTable-${self:custom.stage}
  # dynamo_auctions_table: AuctionsTable-${self:custom.stack_name}
  authorizer: arn:aws:lambda:${self:custom.region}:${AWS::AccountId}:function:auth-service-${self:custom.stage}-auth
  AuctionsTable:
    name: !Ref AuctionsTable
    arn: !GetAtt AuctionsTable.Arn
